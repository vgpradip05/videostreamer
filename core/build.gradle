apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

    }

    buildTypes {
        debug {
            //TODO: Change Url
            buildConfigField "String", "BASE_URL", "\"https://api.dailymotion.com/\""
        }

        release {
            //TODO: Change Url
            buildConfigField "String", "BASE_URL", "\"http://dev.myserver.com\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    /* KOTLIN */
    api "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"

    api "androidx.core:core-ktx:${versions.coreKtx}"

    /* TESTING */
    api "junit:junit:${versions.junit}"
    api "androidx.test.ext:junit:${versions.extJunit}"
    api "androidx.test.espresso:espresso-core:${versions.espresso}"

    /*  ANDROIDX, MATERIAL DESIGN */
    api "androidx.core:core-ktx:${versions.coreKtx}"
    api "com.google.android.material:material:${versions.material}"
    api "androidx.appcompat:appcompat:${versions.appcompat}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    api "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    api "androidx.legacy:legacy-support-v4:${versions.legacyCoreUtils}"

    /* ViewModel + Lifecycle */
    api "androidx.lifecycle:lifecycle-extensions:${versions.androidxArch}"

    /* NAVIGATION */
    api "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    api "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    /*  OKHTTP, RETROFIT */
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    /* GSON */
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.squareup.retrofit2:converter-gson:${versions.gsonRetrofit}"

    /*  KOIN For Kotlin */
    api "org.koin:koin-core:${versions.koin}"
    api "org.koin:koin-androidx-scope:${versions.koin}"
    api "org.koin:koin-androidx-viewmodel:${versions.koin}"
    api "org.koin:koin-androidx-fragment:${versions.koin}"

    /* GLIDE */
    implementation "com.github.bumptech.glide:glide:${versions.glide}"

    /* MULTIDEX */
    api "com.android.support:multidex:${versions.multidex}"

    /* STETHO*/
    api "com.facebook.stetho:stetho:${versions.stetho}"
    api "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"

    /* DAILYMOTION PLAYER*/
    api "com.dailymotion.dailymotion-sdk-android:sdk:${versions.dm}"

    /*paging*/
    api "androidx.paging:paging-runtime:${versions.paging_version}"

}